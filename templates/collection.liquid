
<div id="taxons-collection" class="container" role="main">

    {% paginate collection.products by 5000 %}

    <header role="main">
        <h1>{{ collection.title }}</h1>
    </header>

    {% if collection.description.size > 0 %}
    <div class="hero_image">
        {% include 'shortcode' load: collection.description %}
    </div>
    {% endif %}

    <div class="page-container">
		{% unless collection.handle == 'gift-cards' %}
      
        <div class="filters row-fluid">
            <div class="span12">

                <div class="clearfix filters-block">

                    <div class="field">

                        <div class="clearfix filter">
                            <label for="">Filter</label>

                            <select id="tagsFilter" class="coll-filter">
                                <option value="">all styles</option>
                                {% for tag in collection.all_tags %}
                                    {% unless tag == 'New' or tag == 'Featured' or tag == 'upsell' %}
                                        {% if current_tags contains tag %}
                                            <option value="{{ tag | handle }}" selected>{{ tag }}</option>
                                        {% else %}
                                            <option value="{{ tag | handle }}">{{ tag }}</option>
                                        {% endif %}
                                    {% endunless %}
                                {% endfor %}
                            </select>
                        </div>

                        <script>
                            var collFilters = jQuery('.coll-filter');
                            collFilters.change(function() {
                                var newTags = [];
                                collFilters.each(function() {
                                    if (jQuery(this).val()) {
                                        newTags.push(jQuery(this).val());
                                    }
                                });
                                if (newTags.length) {
                                    var query = newTags.join('+');
                                    window.location.href = jQuery('{{ 'tag' | link_to_tag: 'tag' }}').attr('href').replace('tag', query);
                                }
                                else {
                                    {% if collection.handle %}
                                    window.location.href = '/collections/{{ collection.handle }}';
                                    {% elsif collection.products.first.type == collection.title %}
                                    window.location.href = '{{ collection.title | url_for_type }}';
                                    {% elsif collection.products.first.vendor == collection.title %}
                                    window.location.href = '{{ collection.title | url_for_vendor }}';
                                    {% endif %}
                                }
                            });
                            var includeTagsString = '{{ settings.include_tags }}';
                            var includeTagsArray = includeTagsString.split(',');
                            includeTagsArray.map(Function.prototype.call, String.prototype.trim);
                            for (var i = includeTagsArray.length - 1; i >= 0; i--) {
                                includeTagsArray[i] = includeTagsArray[i].trim();
                            };

                            $('#tagsFilter option').each(function(){
                                var label = $(this).text();
                                var value = $(this).val();
                                var found = $.inArray(label, includeTagsArray) > -1;

                                if (!found) {
                                    $(this).remove();
                                };
                            });


                        </script>


                    </div>

                     <div class="field">

                        <div class="clearfix filter">
                            <label for="">Filter by Size</label>
                            <select class="size-filter">
                                <option value="" selected>All Sizes</option>
                            </select>
                        </div>

                        <script>
                          var sizes = [];
                          $(document).ready(function () {
                            var $sizeFilter = $('.size-filter');
                            var $gridItems = $('.product-tile');
                            var $productRows = $('ul.product-row');
                            var mens = [];
                            var womens = [];
                            var i = sizes.length;
                            while (i--) {
                              if (sizes[i].toLowerCase().indexOf('mens ') > -1) {
                                mens = mens.concat(sizes.splice(i, 1));
                              } else if (sizes[i].toLowerCase().indexOf('womens ') > -1) {
                                womens = womens.concat(sizes.splice(i, 1));
                              } else if (sizes[i].toLowerCase().indexOf('o/s') > -1) {
                                sizes.splice(i, 1);
                              } else if (sizes[i].toLowerCase().indexOf('one size')) {
                                sizes.splice(i, 1);
                              } else if (sizes[i].toLowerCase().indexOf('full (80" x 90")')) {
                                sizes.splice(i, 1);
                              }
                            }
                            mens.sort(naturalSort);
                            womens.sort(naturalSort);
                            sizes.sort(naturalSort);
                            sortedSizes = mens.concat(womens, sizes);
                            for (var i = 0; i < sortedSizes.length; ++i) {
                              $sizeFilter.append('<option value="' + Shopify.handleize(sortedSizes[i]) + '">' + sortedSizes[i] + '</option>');
                            }
                            $sizeFilter.on({
                              change: function (e) {
                                e.preventDefault();
                                if ($(this).val()) {
                                  $gridItems.hide();
                                  $('.' + $(this).val()).show();
                                  $productRows.each(function () {
                                    var showHeader = false;
                                    $('li > .product-tile', this).each(function () {
                                      if ($(this).css('display') != 'none') {
                                        showHeader = true;
                                        return false;
                                      }
                                    });
                                    if (!showHeader) {
                                      $(this).prev('h2').hide();
                                      $(this).hide();
                                    } else {
                                      $(this).prev('h2').show();
                                      $(this).show();
                                    }
                                  });
                                } else {
                                  $gridItems.show();
                                  $productRows.prev('h2').show();
                                  $productRows.show();
                                }
                              }
                            });
                          });

                          Shopify.handleize = function (str) {
                              str = str.toLowerCase();

                              var toReplace = ['"', "'", "\\", "(", ")", "[", "]"];

                              // For the old browsers
                              for (var i = 0; i < toReplace.length; ++i) {
                                  str = str.replace(toReplace[i], "");
                              }

                              str = str.replace(/\W+/g, "-");

                              if (str.charAt(str.length - 1) == "-") {
                                  str = str.replace(/-+\z/, "");
                              }

                              if (str.charAt(0) == "-") {
                                  str = str.replace(/\A-+/, "");
                              }

                              return str
                          };

                          /*
                           * Natural Sort algorithm for Javascript - Version 0.8 - Released under MIT license
                           * Author: Jim Palmer (based on chunking idea from Dave Koelle)
                           */
                          function naturalSort (a, b) {
                              var re = /(^([+\-]?(?:\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[\da-fA-F]+$|\d+)/g,
                                  sre = /^\s+|\s+$/g,   // trim pre-post whitespace
                                  snre = /\s+/g,        // normalize all whitespace to single ' ' character
                                  dre = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,
                                  hre = /^0x[0-9a-f]+$/i,
                                  ore = /^0/,
                                  i = function(s) {
                                      return (naturalSort.insensitive && ('' + s).toLowerCase() || '' + s).replace(sre, '');
                                  },
                                  // convert all to strings strip whitespace
                                  x = i(a) || '',
                                  y = i(b) || '',
                                  // chunk/tokenize
                                  xN = x.replace(re, '\0$1\0').replace(/\0$/,'').replace(/^\0/,'').split('\0'),
                                  yN = y.replace(re, '\0$1\0').replace(/\0$/,'').replace(/^\0/,'').split('\0'),
                                  // numeric, hex or date detection
                                  xD = parseInt(x.match(hre), 16) || (xN.length !== 1 && Date.parse(x)),
                                  yD = parseInt(y.match(hre), 16) || xD && y.match(dre) && Date.parse(y) || null,
                                  normChunk = function(s, l) {
                                      // normalize spaces; find floats not starting with '0', string or 0 if not defined (Clint Priest)
                                      return (!s.match(ore) || l == 1) && parseFloat(s) || s.replace(snre, ' ').replace(sre, '') || 0;
                                  },
                                  oFxNcL, oFyNcL;
                              // first try and sort Hex codes or Dates
                              if (yD) {
                                  if ( xD < yD ) { return -1; }
                                  else if ( xD > yD ) { return 1; }
                              }
                              // natural sorting through split numeric strings and default strings
                              for(var cLoc=0, xNl = xN.length, yNl = yN.length, numS=Math.max(xNl, yNl); cLoc < numS; cLoc++) {
                                  oFxNcL = normChunk(xN[cLoc] || '', xNl);
                                  oFyNcL = normChunk(yN[cLoc] || '', yNl);
                                  // handle numeric vs string comparison - number < string - (Kyle Adams)
                                  if (isNaN(oFxNcL) !== isNaN(oFyNcL)) { return (isNaN(oFxNcL)) ? 1 : -1; }
                                  // rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'
                                  else if (typeof oFxNcL !== typeof oFyNcL) {
                                      oFxNcL += '';
                                      oFyNcL += '';
                                  }
                                  if (oFxNcL < oFyNcL) { return -1; }
                                  if (oFxNcL > oFyNcL) { return 1; }
                              }
                              return 0;
                          }
                        </script>

                        {% comment %}
                        <script>
                            $(document).ready(function(){
                            // get all classes
                               $.fn.classes = function (callback) {
                                   var classes = [];
                                   $.each(this, function (i, v) {
                                       var splitClassName = v.className.split(/\s+/);
                                       for (var j in splitClassName) {
                                           var className = splitClassName[j];
                                           if (-1 === classes.indexOf(className)) {
                                               classes.push(className);
                                           }
                                       }
                                   });
                                   if ('function' === typeof callback) {
                                       for (var i in classes) {
                                           callback(classes[i]);
                                       }
                                   }
                                   return classes;
                               };

                               function size_sort(a, b) {
                                    var parts = {
                                        a: a.replace('---','.').split('_'),
                                        b: b.replace('---','.').split('_')
                                    };
                                    if (parts.a[0] == parts.b[0]) // strings are the same
                                        return parseFloat(parts.a[1]) - parseFloat(parts.b[1]); // sort by number
                                    return parts.a[0] > parts.b[0] ? 1 : -1; // sort by string
                                }

                                var class_array = $('.product-tile').classes();
                                size_array = class_array.filter(function(s){
                                    return ~s.toLowerCase().indexOf("mens");
                                });
                                size_array = size_array.sort(size_sort);

                                var $sizefilter = $('.size-filter');
                                $.each(size_array, function(i,e){
                                    $sizefilter.append('<option value="'+e+'">'+ e.replace('_',' ').replace('---','.')+'</option>');
                                })

                                $sizefilter.change(function() {
                                    if($(this).val()){
                                        $('.product-tile').hide();
                                        $('.product-tile.'+$(this).val()).show();
                                    } else {
                                        $('.product-tile').show();
                                    }
                                });
                            });

                        </script>
                        {% endcomment %}


                    </div>

                    <div class="field">
                        <label for="sort-by">Sort by</label>
                        <select id="sort-by">
                            <option value="manual">Featured</option>
                            <option value="best-selling">Best Selling</option>
                            <option value="price-ascending">Price: Low to High</option>
                            <option value="price-descending">Price: High to Low</option>
                            <option value="title-ascending">A-Z</option>
                            <option value="title-descending">Z-A</option>
                            <option value="created-ascending">Oldest to Newest</option>
                            <option value="created-descending">Newest to Oldest</option>
                        </select>
                        <script>
                            Shopify.queryParams = {};
                            if (location.search.length) {
                            for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
                            aKeyValue = aCouples[i].split('=');
                            if (aKeyValue.length > 1) {
                            Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
                            }
                            }
                            }
                            jQuery('#sort-by')
                            .val('{{ collection.sort_by | default: collection.default_sort_by }}')
                            .bind('change', function() {
                            Shopify.queryParams.sort_by = jQuery(this).val();
                            location.search = jQuery.param(Shopify.queryParams);
                            });
                        </script>
                    </div>

                </div>
            </div>
        </div>
       {% endunless %}
        <div class="product-collection">


            {% if collection.metafields.c_f.tag_groupings %}

                {% assign c_tags = collection.metafields.c_f.tag_groupings | split: ', ' %}
                {% for c_tag in c_tags %}

                    <h2 data-ctag="{{ c_tag }}">{{ c_tag }}</h2>
                    {% comment %} <div class="row-fluid">{% endcomment %}
                    <ul class="product-row clearfix">

                    {% assign empty_cat = true %}
                    {% for product in collection.products %}
                      {% if collection.handle == 'gift-cards' %}
                     	 {% include 'product-grid-gift' with 'three-per-row' %}
                      {% else %}

                        {% if product.tags contains c_tag %}
                          {% assign empty_cat = false %}
                          {% comment %}
                              {% capture thecycle %}{% cycle c_tag: '1', '2', '3', '4' %}{% endcapture %}
                              {% if thecycle == '1' %}
                               <div class="row-fluid">
                              {% endif %}

                              {% include 'product-grid-item' %}

                              {% if thecycle == '4' or forloop.last %}
                               </div>
                              {% endif %}
                          {% endcomment %}
                          <li>

                            {% include 'product-grid-item' %}


                          </li>

                        {% endif %}

                      {% endif %}

                    {% endfor %}

                    </ul>

                    {% if empty_cat %}
                      <script>$('h2[data-ctag="{{ c_tag }}"]').hide();</script>
                    {% endif %}

                {% comment %}</div></div>{% endcomment %}

                {% endfor %}

            {% else %}

                <ul class="product-row clearfix">

                {% for product in collection.products %}
                  {% if collection.handle == 'gift-cards' %}
	                  	{% include 'product-grid-gift' with 'three-per-row' %}
                  {% else %}                  
                      {% cycle 'section-group-start': '<div class="row">', '', '', '' %}
                        <li>
                            {% include 'product-grid-item' %}
                        </li>
                      {% if forloop.last %}
                        </div>
                      {% else %}
                        {% cycle 'section-group-end':'', '', '', '</div>' %} 
                      {% endif %}
      			  {% endif %}    

                  {% else %}
                      <li>There are no products in this view.</li>
                  {% endfor %}

                {% if paginate.pages > 1 %}
                <div class="pagination">
                    {{ paginate | default_pagination }}
                </div>

                {% endif %}

                </ul>

            {% endif %}

            {% comment %}</div>{% endcomment %}
        </div>
    </div>

    {% endpaginate %}

	{% if collection.handle == 'gift-cards' %}
	<h5 class="contact-gift">Looking for a custom amount or have a general question about gift cards? Feel free to <a href="/pages/contact">contact us</a>.</h5>
	{% endif %}



</div>
